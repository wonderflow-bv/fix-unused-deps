#!/usr/bin/env node

const depcheck = require('depcheck')
const execa = require('execa')
const yargs = require('yargs')
const path = require('path')
const fs = require('fs')

function log (str) {
  const { name } = require(path.resolve(process.cwd(), 'package.json'))
  console.log(name, '>', str)
}

yargs(process.argv.slice(2)).command({
  command: '$0',
  desc: 'command to remove unused deps',
  builder: { dryRun: { alias: 'd', desc: 'it only prints unused deps to console, without removing them' } },
  async handler ({ dryRun }) {
    const packageFolder = process.cwd()

    const unused = await depcheck(packageFolder, { skipMissing: true })

    const { devDependencies, dependencies } = unused

    if (dryRun) {
      log(`unused devDeps="${devDependencies.length ? devDependencies : 'no unused'}"; unused deps="${dependencies.length ? dependencies : 'no unused'}"`)

      return
    }

    await removeDeps(devDependencies)

    await removeDeps(dependencies)

    log(`Removed devDeps="${devDependencies}"; removed deps="${dependencies}"`)
  }
})
  .demandCommand()
  .help()
  .argv

async function removeDeps (deps) {
  for (const dep of deps) {
    const { stdout } = await execa('npm', ['uninstall', dep]);
    log(stdout)
  }

  // log(`removed ${deps.length} deps`)
}
